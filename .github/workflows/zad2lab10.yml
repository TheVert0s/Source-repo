name: Continuous Deployment
on:
  workflow_dispatch: # Pozwala na uruchamianie ręczne workflow

jobs:
  dockerCI:
    runs-on: ubuntu-latest
    outputs:
      numer_wersji: ${{ steps.extract_version.outputs.numer_wersji }}
    steps:
    - name: Checkout Source repo
      uses: actions/checkout@v2
      with:
        repository: TheVert0s/Source-repo # Zaktualizuj na odpowiedni adres repozytorium Source repo

    - name: Set up Qemu and Buildx
      run: |
        docker run --privileged --rm tonistiigi/binfmt --install all
        docker buildx create --use
      shell: bash

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract version from index.html
      id: extract_version
      run: |
        numer_wersji=$(sed -n 's/.*Numer Wersji Aplikacji: \([^<]*\).*/\1/p' index.html)
        echo "::set-output name=numer_wersji::$numer_wersji"

    - name: Build and push Docker multi-architecture image
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: studentgit/moja-aplikacja:latest

  kubernetesCI:
    needs: dockerCI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Config repo
      uses: actions/checkout@v2
      with:
        repository: TheVert0s/Config-repo # Zaktualizuj na odpowiedni adres repozytorium Config repo
        ref: main # Zakładam, że główna gałąź to "main", dostosuj do swojej gałęzi # git clone https://github.com/TheVert0s/Source-repo.git
        token: ${{ secrets.GIT_SECRET }}

    - name: Configure git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Dodaj inne kroki modyfikacji manifestów w zależności od potrzeb

    - name: Commit and push changes
      run: |
        git config --global user.email "kacper.majcher@op.pl"
        git config --global user.name "kacper.majcher"
       
        echo "Numer wersji z dockerCI: ${{ needs.dockerCI.outputs.numer_wersji }}"
        sed -i "s|image: studentgit/moja-aplikacja:latest|image: sstudentgit/moja-aplikacja:${{ needs.dockerCI.outputs.numer_wersji }}|g" deployment.yaml
    
        git add .
        git commit -m "Aktualizacja obrazu Docker w manifestach ${{ needs.dockerCI.outputs.numer_wersji }}"
        git push origin main # Zakładając, że używasz głównej gałęzi
